DefVarsN3();
DrawFrame(0.5,"axes");
execModes = ["Manual", "Animation"];


Cylinder = 
{
	A = _P(1); //Primera entrada (Punto inicial del cilindro)
 	B = _P(2); //Segunda entrada (Punto final del cilindro)
 	r = _P(3); //Tercera entrada (radio  del cilindro)
 
 	E = einf^e0; 	
 	Ae =  (A^E)*E;
 	Be = (B^E)*E;
 	Ce = Be - Ae;
 	C = Ce + 1/2*Ce^^2*einf + e0;
 
	 DrawCylinder(A,C,r);
 	C;
}
Joint =
{
	:Yellow;
	reference = _P(1); //motor referencia
	[Jrx, Jry, Jrz] = _P(2); //arreglo de rotaciones
	[Jtx, Jty, Jtz] = _P(3); //arreglo de transalciones
	
	T = TranslatorN3(Jtx, Jty, Jtz); 
	M = T*RotorN3(1,0,0, Jrx)*RotorN3(0,1,0,Jry)*RotorN3(0,0,1,Jrz);
	Mref = reference*M;
	P = Mref*e0*(~Mref);  
	
	S = P - 0.5*(0.1^^2)*einf;
	
	[P, Mref, S]
}

ConnectJoints = 
{
	J1 = _P(1);
	J2 = _P(2);
	
	
	:White;

	::Cylinder(J1(1), J2(1), 0.02);
}

Cajita = {
	E = einf^e0;
	P = _P(1);
	A = _P(2);
	B = _P(3);
	C = _P(4);
	
	Pxe = 2*((A-P)^E)*E;
	Pye = 2*((B-P)^E)*E;
	Pze = 2*((C-P)^E)*E;
	
	Px = Pxe + 0.5*(Pxe^^2)*einf+e0;
	Py = Pye + 0.5*(Pye^^2)*einf+e0;
	Pz = Pze + 0.5*(Pze^^2)*einf+e0;
	
	DrawBox(P, Px, Py, Pz);
}


//--------------------------VARIABLES-----------------------------
[FBrx, FBry, FBrz, otx, oty, otz] = [0,0,0,0,0,0];
[LLJrx, LLJry, LLJrz] = [0,0,0];
[LNJrx, LNJry, LNJrz] = [0,0,0];
[SJRrx, SJRry, SJRrz] = [0,0,0];
[SJLrx, SJLry, SJLrz] = [0,0,0];
[EJRrx, EJRry, EJRrz] = [0,0,0];
[HJLrx, HJLry, HJLrz] = [0,0,0];
[EJLrx, EJLry, EJLrz] = [0,0,0];
[HandJRrx, HandJRry, HandJRrz] = [0,0,0];
[HandJLrx, HandJLry, HandJLrz] = [0,0,0];
[HJRrx, HJRry, HJRrz] = [0,0,0];
[KJRrx, KJRry, KJRrz] = [0,0,0];
[KJLrx, KJLry, KJLrz] = [0,0,0];
[HJLrx, HJLry, HJLrz] = [0,0,0];
[AJRrx, AJRry, AJRrz] = [0,0,0];
[AJLrx, AJLry, AJLrz] = [0,0,0];


//----------------------------------------------------------------


currentMode = Choice("Mode", execModes, 1); 

//values for rotations, 
maxAngle = 2 * Pi;
minAngle = 0; 
stepAngle = 0.1; 

if(currentMode == 1)
{
	
	
	//FullBody
		FBrx = Slider("FullBody rX", minAngle, maxAngle, stepAngle, 0);
		FBry = Slider("FullBody rY", minAngle, maxAngle, stepAngle, 0);
		FBrz = Slider("FullBody rZ", minAngle, maxAngle, stepAngle, 0);
		otx = Slider("FullBody x", -5, 5, 0.1, 0);
		oty = Slider("FullBody y", -5, 5, 0.1, 0);
		otz = Slider("FullBody z", -5, 5, 0.1, 0);  
	
	//Abdomen
		LLJrx = Slider("Abdomen rx", -0.5*Pi, Pi, stepAngle, 0);
		LLJry = Slider("Abdomen ry", -0.5*Pi, 0.5*Pi, stepAngle, 0);
		LLJrz = Slider("Abdomen rz", -0.5*Pi, 0.5*Pi, stepAngle, 0);
	
	//Head
		LNJrx = Slider("Head rx", -0.3*Pi, 0.3*Pi, stepAngle, 0);
		LNJry = Slider("Head ry", -0.5*Pi, 0.5*Pi, stepAngle, 0);
		LNJrz = Slider("Head rz", -0.15*Pi, 0.15*Pi, stepAngle, 0);
		//moveHead(rx, ry);
	
	//Shoulder
		//left
			SJLrx = Slider("Shoulder Left rx", -Pi, Pi, stepAngle, 0);
			SJLry = Slider("Shoulder Left ry", minAngle, maxAngle, stepAngle, 0);
			SJLrz = Slider("Shoulder Left rz", -Pi, 0, stepAngle, 0);
		//right
			
			SJRrx = Slider("Shoulder Right rx", -Pi, Pi, stepAngle, 0);
			SJRry = Slider("Shoulder Right ry", minAngle, maxAngle, stepAngle, 0);
			SJRrz = Slider("Shoulder Right rz", 0, Pi, stepAngle, 0);
		
	//Elbow
		//left
			EJRrx = Slider("Elbow Left rx", -Pi, 0, stepAngle, 0);
			EJRry = Slider("Elbow Left ry", minAngle, maxAngle, stepAngle, 0);
			EJRrz = Slider("Elbow Left rz", minAngle, maxAngle, stepAngle, 0);
		//right
			EJLrx = Slider("Elbow Right rx", -Pi, 0, stepAngle, 0);
			EJLry = Slider("Elbow Right ry", minAngle, maxAngle, stepAngle, 0);
			EJLrz = Slider("Elbow Right rz", minAngle, maxAngle, stepAngle, 0);
		
	//Hands
		//left
			HandJLrx = Slider("Hand Left rx", -0.5*Pi, 0.5*Pi, stepAngle, 0);
			HandJLry = Slider("Hand Left ry", -0.3*Pi, 0.3*Pi, stepAngle, 0);
			HandJLrz = Slider("Hand Left rz", -0.2*Pi, 0.2*Pi, stepAngle, 0);
	
		//right
			HandJRrx = Slider("Hand Right rx",  -0.5*Pi, 0.5*Pi, stepAngle, 0);
			HandJRry = Slider("Hand Right ry", -0.3*Pi, 0.3*Pi, stepAngle, 0);
			HandJRrz = Slider("Hand Right rz", -0.2*Pi, 0.2*Pi, stepAngle, 0);
		
	//Hips
		//left
			HJLrx = Slider("Hips Left rx", -0.7*Pi, 0.7*Pi, stepAngle, 0);
			HJLry = Slider("Hips Left ry", minAngle, maxAngle, stepAngle, 0);
			HJLrz = Slider("Hips Left rz", -0.7*Pi, 0, stepAngle, 0);
		//right
			HJRrx = Slider("Hips Right rx", -0.7*Pi, 0.7*Pi, stepAngle, 0);
			HJRry = Slider("Hips Right ry", minAngle, maxAngle, stepAngle, 0);
			HJRrz = Slider("Hips Right rz", 0, 0.7*Pi, stepAngle, 0);
		
	//Knees
		
		//left
			KJLrx = Slider("Knees Left rx", -Pi, Pi, stepAngle, 0);
			KJLry = Slider("Knees Left ry", minAngle, maxAngle, stepAngle, 0);
			KJLrz = Slider("Knees Left rz", -0.3*Pi, 0.3*Pi, stepAngle, 0);
		//right
			KJRrx = Slider("Knees Right rx", -Pi, Pi, -stepAngle, 0);
			KJRry = Slider("Knees Right ry", minAngle, maxAngle, stepAngle, 0);
			KJRrz = Slider("Knees Right rz", -0.3*Pi, 0.3*Pi, stepAngle, 0);
		
	//Ankles

		//left
			AJRrx = Slider("Ankles Left rx",  -0.2*Pi, 0.3*Pi, stepAngle, 0);
			AJRry = Slider("Ankles Left ry", -0.3*Pi, 0.3*Pi, stepAngle, 0);
			AJRrz = Slider("Ankles Left rz", -0.2*Pi, 0.2*Pi, stepAngle, 0);
		//right
			AJLrx = Slider("Ankles Right rx",  -0.2*Pi, 0.3*Pi, stepAngle, 0);
			AJLry = Slider("Ankles Right ry", -0.3*Pi, 0.3*Pi, stepAngle, 0);
			AJLrz = Slider("Ankles Right rz", -0.2*Pi, 0.2*Pi, stepAngle, 0);

}	
else
{
	EnableAnimate(true);
}
//---------------------------DRAW HUMANOID-------------------------
:IPNS;
//------------------JOINTS

//Origin
?FBrx;
origin = Joint(1,[FBrx, FBry, FBrz],[otx, oty, otz]);
//Core
LLJ = Joint(origin(2), [LLJrx,LLJry,LLJrz], [0,0,0]);
:LLJ(3);

//Neck
LNJ = Joint(LLJ(2), [LNJrx,LNJry,LNJrz], [0,1.2,0]);

Cajita(LNJ(1),
	Joint(LNJ(2), [0,0,0], [0.2,0,0])(1),
	Joint(LNJ(2), [0,0,0], [0,0.2,0])(1), 
	Joint(LNJ(2), [0,0,0], [0,0,0.1])(1));

//Shoulders
SJR = Joint(LLJ(2), [SJRrx,SJRry,SJRrz], [0.5,0.8,0]);
:SJR(3);

SJL = Joint(LLJ(2), [SJLrx,SJLry,SJLrz], [-0.5,0.8,0]);
:SJL(3);

//Elbows
EJR = Joint(SJR(2), [EJRrx,EJRry,EJRrz], [0.1,-0.5,0]);
:EJR(3);

EJL = Joint(SJL(2), [EJLrx,EJLry,EJLrz], [-0.1,-0.5,0]);
:EJL(3);

//Hands
HandJR = Joint(EJR(2), [HandJRrx,HandJRry,HandJRrz], [0.1,-0.5,0]);

Cajita(HandJR(1),
	Joint(HandJR(2), [0,0,0], [0.1,0,0])(1),
	Joint(HandJR(2), [0,0,0], [0,0.1,0])(1), 
	Joint(HandJR(2), [0,0,0], [0,0,0.07])(1));


HandJL = Joint(EJL(2), [HandJLrx,HandJLry,HandJLrz], [-0.1,-0.5,0]);
Cajita(HandJL(1),
	Joint(HandJL(2), [0,0,0], [0.1,0,0])(1),
	Joint(HandJL(2), [0,0,0], [0,0.1,0])(1), 
	Joint(HandJL(2), [0,0,0], [0,0,0.07])(1));


//Hips
HJR = Joint(origin(2), [HJRrx,HJRry,HJRrz], [0.3,-0.2,0]);
:HJR(3);

HJL = Joint(origin(2), [HJLrx,HJLry,HJLrz], [-0.3,-0.2,0]);
:HJL(3);

//Knees
KJR = Joint(HJR(2), [KJRrx,KJRry,KJRrz], [-0.05,-0.6,0]);
:KJR(3);

KJL = Joint(HJL(2), [KJLrx,KJLry,KJLrz], [0.05,-0.6,0]);
:KJL(3);

//Ankles
AJR = Joint(KJR(2), [AJRrx,AJRry,AJRrz], [-0.05,-0.6,0]);

Cajita(AJR(1),
	Joint(AJR(2), [0,0,0], [0.1,0,0])(1),
	Joint(AJR(2), [0,0,0], [0,0.1,0])(1), 
	Joint(AJR(2), [0,0,0], [0,0,0.3])(1));


AJL = Joint(KJL(2), [AJLrx,AJLry,AJLrz], [0.05,-0.6,0]);

Cajita(AJL(1),
	Joint(AJL(2), [0,0,0], [0.1,0,0])(1),
	Joint(AJL(2), [0,0,0], [0,0.1,0])(1), 
	Joint(AJL(2), [0,0,0], [0,0,0.3])(1));

//--------- CONNECTION
ConnectJoints(LLJ, LNJ);
ConnectJoints(LLJ, SJR);
ConnectJoints(LLJ, SJL);
ConnectJoints(SJR, SJL);
ConnectJoints(LLJ, HJR);
ConnectJoints(LLJ, HJL);
ConnectJoints(HJR, HJL);
ConnectJoints(HJR, KJR);
ConnectJoints(HJL, KJL);
ConnectJoints(KJL, AJL);
ConnectJoints(KJR, AJR);
ConnectJoints(SJR, EJR);
ConnectJoints(SJL, EJL);
ConnectJoints(EJR, HandJR);
ConnectJoints(EJL, HandJL);

//-----------------------------------------------------------------
 
scInfo = StartOverlay();
:White;
SetImagePos(1, 1, 0);
SetImageAlign(0, 1);
SetRenderTextSize(24);
:GetRenderTextImage("Proyecto Final Algebra Geom?trica Conformal");:MWhite;
SetImagePos(1, 100, 0);
SetImageAlign(0, 0);
SetRenderTextSize(15);
:GetRenderTextImage("Braulio Ivan Solorio G?mez\nMiguel Herrera Padilla\nArturo Garc?a Brambila");
EndOverlay();
:scInfo;


